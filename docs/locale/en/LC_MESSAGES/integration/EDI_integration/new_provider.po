# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Citeck
# This file is distributed under the same license as the Citeck package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Citeck \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-28 23:55+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../integration/EDI_integration/new_provider.rst:2
msgid "Реализация интеграции с новым ЭДО-провайдером"
msgstr "Implementing integration with a new EDI provider"

#: ../../integration/EDI_integration/new_provider.rst:5
msgid "1. Со стороны бандла работы с ЭДО-провайдером (мкр. интеграции)"
msgstr "1. From the EDI provider handling bundle side (integrations microservice)"

#: ../../integration/EDI_integration/new_provider.rst:7
msgid ""
"Создать java проект с бандлом. Пример создания нового бандла можно "
"посмотреть тут: Пример создания бандла."
msgstr ""
"Create a Java project with a bundle. An example of creating a new bundle can be found here: Bundle creation example."

#: ../../integration/EDI_integration/new_provider.rst:9
msgid ""
"В данном проекте обязательно надо импортнуть зависимость ``ru.citeck.ecos"
".ecos-edi-commons``. Версия должна соответствовать той, которая находится"
" в микросервисе интеграции необходимой Вам версии."
msgstr ""
"This project must import the dependency ``ru.citeck.ecos.ecos-edi-commons``. The version must match the one in the integrations microservice of the version you require."

#: ../../integration/EDI_integration/new_provider.rst:11
msgid ""
"В активаторе (класс интерфейса ``org.osgi.framework.BundleActivator``) "
"необходимо зарегистрировать свои реализации "
"``ru.citeck.ecos.domain.edi.service.sync.EdiEventsSyncService`` и "
"``ru.citeck.ecos.domain.edi.service.api.EdiApiService в бинах "
"микросервиса integrations``. Пример из Контура (не забудьте при выгрузке "
"бандла выполнять unregister(…)):"
msgstr ""
"In the activator (class implementing ``org.osgi.framework.BundleActivator``), you need to register your implementations of "
"``ru.citeck.ecos.domain.edi.service.sync.EdiEventsSyncService`` and "
"``ru.citeck.ecos.domain.edi.service.api.EdiApiService`` in the beans of the integrations microservice. Example from Kontur (don't forget to perform unregister(…) when unloading the bundle):"

#: ../../integration/EDI_integration/new_provider.rst:23
msgid ""
"После этого шага, запросы к Вашему ЭДО-провайдеру в рамках этих "
"интерфейсов будут транслироваться в Ваш сервис."
msgstr ""
"After this step, requests to your EDI provider within these interfaces will be translated to your service."

#: ../../integration/EDI_integration/new_provider.rst:25
msgid ""
"В существующих на данный момент бандлах можно так же найти примеры "
"регистрации слушателя изменения данных по какому-то ящику (сущности "
"ящика, кредов, датасорса). Можно использовать для чистки кешей внутри "
"бандла."
msgstr ""
"In the currently existing bundles, you can also find examples of registering a listener for data changes related to a specific box (box entity, credentials, data source). Can be used for clearing caches inside the bundle."

#: ../../integration/EDI_integration/new_provider.rst:27
msgid ""
"В случае отсутствия Вашего провайдера в enum "
"``ru.citeck.ecos.domain.edi.dto.enums.EdiProviderType`` либы ``ecos-edi-"
"commons`` - необходимо будет его завести."
msgstr ""
"If your provider is not present in the enum "
"``ru.citeck.ecos.domain.edi.dto.enums.EdiProviderType`` of the ``ecos-edi-commons`` library, it will be necessary to add it."

#: ../../integration/EDI_integration/new_provider.rst:30
msgid "2. Со стороны связующей либы ecos-edi-integration (мкр. интеграции)"
msgstr "2. From the connecting library ecos-edi-integration side (integrations microservice)"

#: ../../integration/EDI_integration/new_provider.rst:32
msgid ""
"Как бы не хотелось полностью унифицировать обработку одного "
"ЭДО-провайдера от другого - не получится. Разные атрибуты для "
"идентификаторов, немного разная политика поиска и тд."
msgstr ""
"No matter how much we'd like to fully unify the processing of one EDI provider from another, it's not possible. Different attributes for identifiers, slightly different search policies, etc."

#: ../../integration/EDI_integration/new_provider.rst:34
msgid ""
"Поэтому, создан небольшой интерфейс "
"``ru.citeck.ecos.edi.domain.integration.service.provider.ProviderHandler``"
" на стороне ``ecos-edi-integration``, которая выполняет действия по "
"поиску записей в альфреске (пока в альфреске)."
msgstr ""
"Therefore, a small interface "
"``ru.citeck.ecos.edi.domain.integration.service.provider.ProviderHandler``"
" was created on the ``ecos-edi-integration`` side, which performs actions to search for records in Alfresco (currently in Alfresco)."

#: ../../integration/EDI_integration/new_provider.rst:36
msgid ""
"Реализацию для нового провайдера необходимо зарегистрировать. Делается "
"это просто - "
"``ru.citeck.ecos.edi.domain.integration.factory.ApplicationCamelContextFactoryImpl#createProviderResolver``:"
msgstr ""
"The implementation for the new provider needs to be registered. This is done simply in "
"``ru.citeck.ecos.edi.domain.integration.factory.ApplicationCamelContextFactoryImpl#createProviderResolver``:"

#: ../../integration/EDI_integration/new_provider.rst:49
msgid "3. Со стороны хранилки (альфреско)"
msgstr "3. From the repository side (Alfresco)"

#: ../../integration/EDI_integration/new_provider.rst:51
msgid ""
"На данный момент, хранилка - альфреско. Ее можно сменить при наличии "
"подобного варианта, переделав лишь либу ``ecos-edi-integration`` или "
"сделав аналогичную для конкретной хранилки."
msgstr ""
"Currently, the repository is Alfresco. It can be changed if a similar option is available, by reworking only the ``ecos-edi-integration`` library or creating a similar one for a specific repository."

#: ../../integration/EDI_integration/new_provider.rst:53
msgid ""
"Создать аспект для хранения идентификаторов документов (подписей, в "
"случае некоторых провайдеров)."
msgstr ""
"Create an aspect for storing document identifiers (signatures, in the case of some providers)."

#: ../../integration/EDI_integration/new_provider.rst:55
msgid ""
"Зарегистрировать свою реализацию "
"``ru.citeck.ecos.integration.edi.documents.identifiers.EdiIdentifiersProvider``"
" в "
"``ru.citeck.ecos.integration.edi.documents.identifiers.EdiIdentifiersProviderRegistry``."
" Если вы наследуетесь от "
"``ru.citeck.ecos.integration.edi.documents.identifiers.AbstractEdiIdentifiersProvider``,"
" то регистрация при инициализации бина произойдет автоматически за счет "
"``@PostConstruct``."
msgstr ""
"Register your implementation of "
"``ru.citeck.ecos.integration.edi.documents.identifiers.EdiIdentifiersProvider``"
" in "
"``ru.citeck.ecos.integration.edi.documents.identifiers.EdiIdentifiersProviderRegistry``."
" If you inherit from "
"``ru.citeck.ecos.integration.edi.documents.identifiers.AbstractEdiIdentifiersProvider``,"
" then registration during bean initialization will happen automatically via "
"``@PostConstruct``."

#: ../../integration/EDI_integration/new_provider.rst:57
msgid ""
"Данный сервис необходим для генерации печатных форм (проверка "
"существования идентификаторов ЭДО у нод) и для определения типа документа"
" EDI (не путать с ЮЗДО)."
msgstr ""
"This service is necessary for generating printed forms (checking the existence of EDI identifiers on nodes) and for determining the EDI document type (not to be confused with UZDO)."

#: ../../integration/EDI_integration/new_provider.rst:59
msgid ""
"Зарегистрировать свою реализацию "
"``ru.citeck.ecos.integration.edi.documents.titles.TitleTypeService`` в "
"``ru.citeck.ecos.integration.edi.documents.titles.TitleTypeServiceRegistry``."
" Если вы наследуетесь от "
"``ru.citeck.ecos.integration.edi.documents.titles.AbstractTitleTypeService``,"
" то регистрация при инициализации бина произойдет автоматически за счет "
"``@PostConstruct``."
msgstr ""
"Register your implementation of "
"``ru.citeck.ecos.integration.edi.documents.titles.TitleTypeService`` in "
"``ru.citeck.ecos.integration.edi.documents.titles.TitleTypeServiceRegistry``."
" If you inherit from "
"``ru.citeck.ecos.integration.edi.documents.titles.AbstractTitleTypeService``,"
" then registration during bean initialization will happen automatically via "
"``@PostConstruct``."

#: ../../integration/EDI_integration/new_provider.rst:61
msgid ""
"Данный сервис необходим при подписании ЮЗДО. Благему определяется, "
"нужно ли генерировать и подписывать титул документа или достаточно "
"подписи самого вложения."
msgstr ""
"This service is necessary when signing UZDO (Legal Entity Document Flow). It determines whether it is necessary to generate and sign the document title or if the signature of the attachment itself is sufficient."

#: ../../integration/EDI_integration/new_provider.rst:63
msgid ""
"Самая основная часть - подготовка запросов и постобработка ответов. За "
"кастомную часть этого процесса отвечает "
"``ru.citeck.ecos.integration.edi.service.EdiProviderHelper``, которому "
"делегируется составление DTO, которые будут отправлены в микросервис и, "
"далее, в бандл. Как и с остальными сервисами, тут надо зарегистрировать "
"свой компонент в своем registry, как и у остальных сервисов, тут есть "
"авторегистрирующий "
"``ru.citeck.ecos.integration.edi.service.AbstractEdiProviderHelper``. "
"Лучше использовать его, в нем частично функционал класса уже реализован."
msgstr ""
"The most essential part is preparing requests and post-processing responses. The custom part of this process is handled by "
"``ru.citeck.ecos.integration.edi.service.EdiProviderHelper``, which is delegated the task of composing DTOs that will be sent to the microservice and, subsequently, to the bundle. As with other services, you need to register your component in its registry; like the other services, there is an auto-registering "
"``ru.citeck.ecos.integration.edi.service.AbstractEdiProviderHelper``. It's better to use it, as part of the class functionality is already implemented there."