# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Citeck
# This file is distributed under the same license as the Citeck package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Citeck \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-28 23:55+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../general/process/process_description.rst:2
msgid "Описание микросервиса Process и предпосылки"
msgstr ""

#: ../../general/process/process_description.rst:4
msgid "Микросервис для управления BPMN процессами."
msgstr ""

#: ../../general/process/process_description.rst:6
msgid "Предъявляемые требования:"
msgstr ""

#: ../../general/process/process_description.rst:8
msgid ""
"Отказоустойчивость. При выходе из строя любого узла системы "
"работоспособность должна сохраняться."
msgstr ""

#: ../../general/process/process_description.rst:9
msgid ""
"Сохранность данных. При полной или частичной потере данных на одном из "
"узлов хранилища данные в системе не должны быть потеряны."
msgstr ""

#: ../../general/process/process_description.rst:10
msgid ""
"Горизонтальное масштабирование. При росте количества процессов должна "
"быть возможность горизонтального расширения за счет увеличения количества"
" узлов в кластере, чтобы избежать деградации времени выполнения запросов "
"с увеличением времени жизни системы. Старые процессы, которые уже давно "
"завершились не должны оказывать негативное влияние на активные."
msgstr ""

#: ../../general/process/process_description.rst:12
msgid "В качестве хранилища для данных выбрана NoSQL БД MongoDB."
msgstr ""

#: ../../general/process/process_description.rst:14
msgid "Схема связей микросервиса ECOS Process в случае MongoDB:"
msgstr ""

#: ../../general/process/process_description.rst:20
msgid ""
"В качестве хранилища для данных в будущем может быть выбрана NoSQL БД "
"Cassandra, которая сможет решить сразу несколько поставленных задач:"
msgstr ""

#: ../../general/process/process_description.rst:22
msgid ""
"Автоматическая репликация данных на заданное количество узлов "
"(Сохранность данных)"
msgstr ""

#: ../../general/process/process_description.rst:23
msgid ""
"Все ноды в кластере Cassandra являются равнозначными. Мастер отсутствует "
"(Отказоустойчивость)"
msgstr ""

#: ../../general/process/process_description.rst:24
msgid ""
"Кластер Cassandra можно гибко конфигурировать и добавлять новые ноды в "
"уже работающую систему (Горизонтальное масштабирование)"
msgstr ""

#: ../../general/process/process_description.rst:26
msgid "Схема связей микросервиса ECOS Process, в случае кластера Cassandra:"
msgstr ""

#: ../../general/process/process_description.rst:32
msgid "Особенности:"
msgstr ""

#: ../../general/process/process_description.rst:34
msgid ""
"В Enterprise конфигурации мы получаем 3 уровня горизонтального "
"масштабирования - хранилище, gateway для доступа к хранилищу и кластер "
"stateless микросервисов ECOS Process"
msgstr ""

#: ../../general/process/process_description.rst:35
msgid ""
"Так как микросервисы ECOS Process не хранят состояние мы можем отправлять"
" запрос от пользователя на любой из них. Для синхронизации действий между"
" инстансами ECOS Process используется Hazelcast"
msgstr ""

#: ../../general/process/process_description.rst:36
msgid ""
"Описание процессов хранится во внешнем микросервисе ECOS Apps, который у "
"нас уже реализован и версионирует любые изменения в процессах"
msgstr ""

#: ../../general/process/process_description.rst:37
msgid ""
"Интеграция с внешними событиями осуществляется через очередь сообщений "
"RabbitMQ."
msgstr ""

#: ../../general/process/process_description.rst:38
msgid ""
"Cassandra настраивается на QUORUM Read/Write (N/2 + 1), где N - "
"количество узлов Cassandra. Это означает что запись считается успешной "
"если большинство нод в кластере подтвердили, что запись произошла. Для "
"чтения так же требуется, чтобы большинство нод вернуло актуальные данные."
" Такая настройка позволяет избежать ситуаций когда сетевые проблемы между"
" нодами кластера приводят к их рассинхронизации."
msgstr ""

#: ../../general/process/process_description.rst:39
msgid ""
"Администратор через центральную конфигурацию может настраивать ECOS "
"Process для подключения к кластеру Cassandra"
msgstr ""

#: ../../general/process/process_description.rst:41
msgid ""
"В NoSQL решении нет полноценных транзакций и для гарантии сохранности "
"данных состояние процесса описывается как неизменяемое. При этом каждое "
"состояние процесса хранится как отдельная версия. В инстансе процесса мы "
"только меняем ссылку на новое состояние, после того, как все активности "
"успешно завершились."
msgstr ""

#: ../../general/process/process_description.rst:43
msgid ""
"Кроме сохранности данных это так же позволяет производить возврат "
"процесса в любое из предыдущих состояний и очень помогает в случае "
"возникновения нештатных ситуаций."
msgstr ""

#: ../../general/process/process_description.rst:50
msgid "Жизненный цикл транзакции с запущенным процессом в ecos-process"
msgstr ""

#: ../../general/process/process_description.rst:56
msgid ""
"Транзакция в ECOS Process начинается, когда происходит какое-то событие "
"(например, «Создан Договор») или при поступлении команды (например, "
"«Завершить задачу»)."
msgstr ""

#: ../../general/process/process_description.rst:58
msgid ""
"При возникновении события мы проверяем всех подписчиков на это событие и "
"для каждого из них проверяем условия, если они есть. В случае, если "
"условия не прошли проверку, мы заканчиваем обработку события. Когда "
"условия выполнены, мы запускаем необходимую команду. Далее обработка идет"
" также, как в случае, если в микросервис сразу пришла команда."
msgstr ""

#: ../../general/process/process_description.rst:60
msgid ""
"При поступлении команды для выполнения действия в процессе мы читаем "
"состояние процесса, производим ряд переходов и действий согласно описанию"
" процесса и, если все операции прошли успешно, то создаем в БД новую "
"версию состояния процесса, после чего меняем ссылку в инстансе процесса "
"на новое состояние. Если в ходе транзакции возникали внешние события или "
"внешние команды, то по завершении транзакции мы отправляем их в RabbitMQ."
msgstr ""

