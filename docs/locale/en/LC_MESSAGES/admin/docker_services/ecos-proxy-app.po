# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Citeck
# This file is distributed under the same license as the Citeck package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Citeck \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-28 23:55+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../admin/docker_services/ecos-proxy-app.rst:4
msgid "ecos-proxy-app"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:7
msgid "Назначение"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:8
msgid "Образ проксирующего сервера со сборкой проекта ecos-ui."
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:11
msgid "Базовые образы"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:12
msgid ""
"nexus.citeck.ru/ecos-nginx-spnego:stable -  Nginx (1.17.6) собирается из "
"исходников + в сборку включен модуль spnego (1.1.0)  для интеграции с AD "
"заказчика и реализации SSO. Базовый образ строится на alpine:3.7 "
"openresty/openresty:centos-rpm - openresty (1.15.8.3) устанавливается из "
"репо пакетами. Базовый образ строится на CentOS 7."
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:16
msgid "Шаблон сервиса docker-compose"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:37
msgid "Используемые переменные"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:38
msgid ""
"DEFAULT_LOCATION_V2 - переключение дефолтного редиректа ( / ) с "
"share/page на v2/. Формат переменной: DEFAULT_LOCATION_V2=true (параметр "
"дублируется в клиенте в настройках системных журналов)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:39
msgid ""
"ECOS_INIT_DELAY - таймаут запуска entrypoint скрипта, формирующего "
"default.conf сервера. По умолчанию 30с для нормализации инициализации "
"апстримов в compose проектах."
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:40
msgid ""
"CADVISOR_TARGET - если параметр не указан, то из файла конфигурации nginx"
" будет удален апсрим cadvisor и зависимые от него локейшены. Формат "
"переменной: CADVISOR_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:41
msgid ""
"NODE_EXPORTER_TARGET - если параметр не указан, то из файла конфигурации "
"nginx будет удален апсрим node-exporter и зависимые от него локейшены. "
"Формат переменной: NODE_EXPORTER_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:42
msgid ""
"USE_EXTERNAL_CONFIGURATION - при объявлении данной переменной будет "
"удален конфигурационный файл default.conf в директории nginx. "
"Используется для разработки и конфигурирования, при этом директории "
"статики, конфигурационные файлы, сертификаты и прочее необходимо "
"прокинуть в контейнер через pv. Директория монтирования файла "
"конфигурации nginx  - /etc/nginx/conf.d/. Формат переменной: "
"USE_EXTERNAL_CONFIGURATION=true"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:43
msgid ""
"PROXY_TARGET - если параметр не указан в файле ecos-proxy.env, то "
"выставляется дефолтное проксирование на контейнер ecos- ecos:8080. "
"Соответственно, при объявлении параметра в файле переменных будет "
"заменено значение ecos:8080 в апстриме ecos конфигурации nginx образа на "
"указанное в файле переменных. Формат переменной: "
"PROXY_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:44
msgid ""
"GATEWAY_TARGET - если параметр не указан, то из файла конфигурации nginx "
"будет удален апсрим gateway и зависимые от него локейшены. Формат "
"переменной: GATEWAY_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:45
msgid ""
"ENABLE_LOGGING - по умолчанию логирование контейнера отключено, "
"объявление данной переменной включит стандартное логирование nginx, "
"выставление переменной в debug включит расширенный режим отладки "
"обработки пакетов nginx. Формат переменной: ENABLE_LOGGING=true (debug "
"для расширенного режима)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:46
msgid ""
"ENABLE_SERVER_STATUS - включение локейшена с выдачей статистики сервера "
"nginx, используется для централизированного мониторинга. Локейш доступен "
"только из docker сети. Формат переменной: ENABLE_SERVER_STATUS=true"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:47
msgid ""
"ENABLE_MOBILE_APP_ACCESS - включение локейшена /gateeway с проверкой "
"bearer токена в хидере Authorization. Используется для доступа мобильным "
"приложением. Формат переменной: ENABLE_MOBILE_APP_ACCESS=true. При "
"включении данного функционала требуется сконфигрурировать переменные "
"EIS_ID, REALM_ID, CLIENT_SECRET для интеграции с keycloak."
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:48
msgid ""
"ENABLE_OIDC_FULL_ACCESS - включение проверки bearer токена в хидере "
"Authorization для любого из обрабатываемых локейшенов. Формат переменной:"
" ENABLE_OIDC_FULL_ACCESS=true. При включении данного функционала "
"требуется сконфигрурировать переменные EIS_ID, REALM_ID, CLIENT_SECRET "
"для интеграции с keycloak."
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:49
msgid ""
"ONLYOFFICE_TARGET - включение локейшена /onlyoffice/ для интеграции ecos "
"c развернутым инстансом OnlyOffice. Формат переменной: "
"ONLYOFFICE_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:50
msgid ""
"MAILHOG_TARGET - включение локейшена проксирования в ui контейнера "
"mailhog. MAILHOG_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:51
msgid ""
"ECOS_REGISTRY_TARGET - включение локейшена проксирования в ui контейнера "
"ecos(jhipster)-registry. Формат переменной: "
"ECOS_REGISTRY_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:52
msgid ""
"RABBITMQ_TARGET - включение локейшена проксирования в managment ui "
"контейнера rabbitmq. Формат переменной: RABBITMQ_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:53
msgid ""
"EIS_TARGET - включение локейшена проксирования в ui контейнера eis. "
"Используется при размещении eis за проксирующим сервером в сетевом "
"сегменте заказчика. Формат переменной: EIS_TARGET=ip_or_fqdn:port"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:54
msgid ""
"ECOS_PAGE_TITLE - настройка заголовка index.html страницы браузера для "
"нового интерфейса (v2). По умолчанию Citeck ECOS"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:55
msgid ""
"EIS_PROTO – протокол, по которому идёт взаимодействие с keycloak. "
"Значение по-умолчанию  https, опционально можно поставить http"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:56
msgid "GATEWAY_TLS_ENABLED - включить HTTPS до ecos-gateway (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:57
msgid ""
"GATEWAY_TLS_CERT - корневой сертификат для проверки сертификата ecos-"
"gateway. Можно указать непосредственно тот же сертификат, который "
"использует gateway. По умолчанию цепочка сертификатов проверяется на 2 "
"уровня. По умолчанию false. (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:58
msgid ""
"GATEWAY_TLS_NAME - имя gateway сервера. nginx всегда проверяет хост "
"gateway на соответствие сертификату, но если хост динамический, то можно "
"использовать эту настройку чтобы задать его константой. (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:59
msgid ""
"ENABLE_HTTPS - включает сервер по SERVER_HTTPS_PORT порту и ждет "
"сертификаты SERVER_TLS_CERT и SERVER_TLS_KEY (v3, v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:60
msgid ""
"ENABLE_HSTS - добавлять заголовок Strict-Transport-Security к ответам "
"сервера. (v3, v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:61
msgid ""
"SERVER_TLS_CERT - сертификат сервера. По умолчанию /app/ssl/ecos-"
"proxy.cert (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:62
msgid ""
"SERVER_TLS_KEY - приватный ключ сервера. По умолчанию /app/ssl/ecos-"
"proxy.key (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:63
msgid ""
"SERVER_HTTP_PORT - http порт, который будет слушать nginx. По умолчанию "
"зависит от пользователя, под которым запускается контейнер. Если это "
"root, то 80, иначе - 8080 (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:64
msgid ""
"SERVER_HTTPS_PORT - https порт, который будет слушать nginx. По умолчанию"
" зависит от пользователя, под которым запускается контейнер. Если это "
"root, то 443, иначе - 8443 (v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:65
msgid ""
"MIN_TLS_VER - минимально допустимая версия TLS. Допустимные значения: "
"[1.3, 1.2, 1.0] (v3, v4)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:67
msgid "Не реализованы:"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:69
msgid "SOLR_TARGET"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:70
msgid "ECOS_REGISTRY_TARGET (проблема с api)"
msgstr ""

#: ../../admin/docker_services/ecos-proxy-app.rst:73
msgid "Типовой вывод принятых настроек в лог контейнера"
msgstr ""

