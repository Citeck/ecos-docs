# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Citeck
# This file is distributed under the same license as the Citeck package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Citeck \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-28 23:55+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../architecture/base.rst:2
msgid "Базовая архитектура"
msgstr ""

#: ../../architecture/base.rst:5
msgid "Содержание"
msgstr ""

#: ../../architecture/base.rst:7
msgid ""
"Система Citeck построена на основе микросервисной "
"событийно-ориентированной архитектуры. В качестве основного способа "
"взаимодействия микросервисов используется обмен сообщениями через очередь"
" сообщений (MQ)."
msgstr ""

#: ../../architecture/base.rst:10
msgid ""
"Платформа поддерживает работу с различными источниками данных без "
"необходимости копирования данных во внутренний репозиторий. Для работы с "
"данными используется собственный язык запросов Records API. Перечень "
"источников данных может быть легко расширен."
msgstr ""

#: ../../architecture/base.rst:12
msgid "Компоненты системы:"
msgstr ""

#: ../../architecture/base.rst:14
msgid ""
"**DAO services** – сервисы работы с контентом и метаданными. В качестве "
"источников данных могут использоваться Alfresco Content Service, Базы "
"данных, 1С, SAP и другие;"
msgstr ""

#: ../../architecture/base.rst:15
msgid ""
"**Process services** – сервисы управления бизнес-процессами, "
"поддерживаются нотации моделирования бизнес-процессов BPMN;"
msgstr ""

#: ../../architecture/base.rst:16
msgid ""
"**Application services** – сервисы управления приложениями Citeck, их "
"версионностью и деплойментом;"
msgstr ""

#: ../../architecture/base.rst:17
msgid ""
"**Data services** – сервисы работы с данными, в том числе валидации "
"данных и их индексации;"
msgstr ""

#: ../../architecture/base.rst:18
msgid "**Integration services** – интеграционные сервисы, включая ЮЗДО;"
msgstr ""

#: ../../architecture/base.rst:19
msgid ""
"**API gateway** – API шлюз, используется в том числе для запросов от "
"пользовательского интерфейса (WEB и мобильного);"
msgstr ""

#: ../../architecture/base.rst:20
msgid "**Business logic services** – сервисы бизнес-логики и конфигурации."
msgstr ""

#: ../../architecture/base.rst:22
msgid ""
"Интерфейс системы разработан на базе фреймворка **ReactJS** в виде "
"статичных **JS библиотек**, которые раздаются через NGINX и работают под "
"управлением веб-браузеров на пользовательских устройствах."
msgstr ""

#: ../../architecture/base.rst:24
msgid ""
"Мобильный интерфейс разработан на базе фреймворка **React Native**, также"
" поддерживается адаптивная верстка для мобильных браузеров."
msgstr ""

#: ../../architecture/base.rst:26
msgid ""
"Запросы от пользовательских интерфейсов маршрутизируются через **NGINX** "
"и **API шлюз**."
msgstr ""

#: ../../architecture/base.rst:28
msgid ""
"ПО Citeck развертывается с использование сервисов контейнеризации "
"**Docker / Kubernetes**."
msgstr ""

#: ../../architecture/base.rst:35
msgid "Микросервисы"
msgstr ""

#: ../../architecture/base.rst:52
msgid "Компонент"
msgstr ""

#: ../../architecture/base.rst:53
msgid "Описание"
msgstr ""

#: ../../architecture/base.rst:54
msgid "**ecos-proxy**"
msgstr ""

#: ../../architecture/base.rst:55
msgid "Контейнер с nginx (OpenResty) и UI статикой (JS + CSS)."
msgstr ""

#: ../../architecture/base.rst:56
msgid "**ecos-registry**"
msgstr ""

#: ../../architecture/base.rst:57
msgid "Реестр приложений и сервер Spring Cloud конфигурации."
msgstr ""

#: ../../architecture/base.rst:58
msgid "**ecos-gateway**"
msgstr ""

#: ../../architecture/base.rst:59
msgid "Микросервис реализует API шлюз взаимодействия от клиента к серверу."
msgstr ""

#: ../../architecture/base.rst:60
msgid "**ecos-apps**"
msgstr ""

#: ../../architecture/base.rst:61
msgid ""
"Микросервис приложений Citeck, отвечающий за доставку приложений Citeck к"
" целевым сервисам."
msgstr ""

#: ../../architecture/base.rst:62
msgid "**ecos-notifications**"
msgstr ""

#: ../../architecture/base.rst:63
msgid "Микросервис отправки уведомлений (email, push-нотификации и др.)."
msgstr ""

#: ../../architecture/base.rst:64
msgid "**ecos-model**"
msgstr ""

#: ../../architecture/base.rst:65
msgid ""
"Микросервис моделей. Отвечает за информацию о типах, шаблонах нумерации и"
" о матрицах прав."
msgstr ""

#: ../../architecture/base.rst:66
msgid "**ecos-history**"
msgstr ""

#: ../../architecture/base.rst:67
msgid ""
"Микросервис для хранения истории. Подписан на события в системе и "
"сохраняет информацию о них в БД."
msgstr ""

#: ../../architecture/base.rst:68
msgid "**ecos-process**"
msgstr ""

#: ../../architecture/base.rst:69
msgid "Микросервис процессов. Отвечает за процессы BPMN."
msgstr ""

#: ../../architecture/base.rst:70
msgid "**ecos-eis**"
msgstr ""

#: ../../architecture/base.rst:71
msgid "Приложение Keycloak для аутентификации в системе."
msgstr ""

#: ../../architecture/base.rst:72
msgid "**alfresco**"
msgstr ""

#: ../../architecture/base.rst:73
msgid ""
"Open-source ECM система, которая может использоваться для хранения "
"контента (один из вариантов реализации)."
msgstr ""

#: ../../architecture/base.rst:74
msgid "**solr**"
msgstr ""

#: ../../architecture/base.rst:75
msgid "Система индексации метаданных и контента документов."
msgstr ""

#: ../../architecture/base.rst:76
msgid "**ecos-uiserv**"
msgstr ""

#: ../../architecture/base.rst:77
msgid ""
"Микросервис UI конфигураций. Отвечает за формы, журналы, UI действия, "
"темы, дашборды, локализацию, иконки, конфигурацию меню."
msgstr ""

#: ../../architecture/base.rst:78
msgid "**ecos-integrations**"
msgstr ""

#: ../../architecture/base.rst:79
msgid ""
"Микросервис для интеграции с внешними системами (SAP, 1C, Rabbit MQ и "
"тд.)."
msgstr ""

#: ../../architecture/base.rst:80
msgid "**ecos-transformations**"
msgstr ""

#: ../../architecture/base.rst:81
msgid ""
"Микросервис для преобразования (трансформации) контента. Например, "
"генерация по шаблону, конвертация типа документов, накладывание штампов и"
" др."
msgstr ""

#: ../../architecture/base.rst:82
msgid "**ecos-content**"
msgstr ""

#: ../../architecture/base.rst:83
msgid ""
"Микросервис для обеспечения хранения файлов в системе в определенное "
"файловое хранилище (S3/Alfresco)."
msgstr ""

#: ../../architecture/base.rst:84
msgid "**zookeeper**"
msgstr ""

#: ../../architecture/base.rst:85
msgid ""
"Распределенное key-value хранилище для координации приложений Citeck "
"между собой."
msgstr ""

#: ../../architecture/base.rst:86
msgid "**Rabbit MQ**"
msgstr ""

#: ../../architecture/base.rst:87
msgid "Приложение для обмена сообщениями между микросервисами."
msgstr ""

#: ../../architecture/base.rst:90
msgid "Хранение данных"
msgstr ""

#: ../../architecture/base.rst:92
msgid "Основная используемая реляционная база данных – **PostgreSQL**."
msgstr ""

#: ../../architecture/base.rst:94
msgid ""
"Хранение метаданных поддерживается в любой системе через адаптер (record "
"source). Существующие адаптеры: **PostgreSQL, Oracle DB, MS SQL, Mongo "
"DB, Alfresco ECM, SAP HANA.**"
msgstr ""

#: ../../architecture/base.rst:96
msgid ""
"Для хранения документов может быть использована БД **PostgreSQL, Alfresco"
" ECM, S3** -совместимое хранилище или внешняя ECM система через адаптер "
"(например, разработан адаптер к системе OpenText)."
msgstr ""

#: ../../architecture/base.rst:98
msgid ""
"Помимо баз данных используется также прямая запись в файловую систему для"
" приложений **Alfresco (Content Store), Zookeeper, Rabbit MQ и Solr**."
msgstr ""

#: ../../architecture/base.rst:102
msgid "Зависимости компонентов"
msgstr ""

#: ../../architecture/base.rst:108
msgid ""
"Центральной частью системы Citeck является абстракция **<DATA SOURCE>**, "
"в качестве которой может выступать любой источник данных в любом из "
"микросервисов Citeck."
msgstr ""

#: ../../architecture/base.rst:110
msgid ""
"Для добавления новых источников достаточно реализовать определенный "
"интерфейс и данные из этого источника могут быть свободно интегрированы "
"со всей экосистемой Citeck (их можно отображать в журнале, редактировать "
"и просматривать через формы, отправлять по ним уведомления, запускать по "
"ним процессы и т. д.)."
msgstr ""

#: ../../architecture/base.rst:112
msgid ""
"Любой **<DATA SOURCE>** в общем случае может общаться со следующими "
"сервисами:"
msgstr ""

#: ../../architecture/base.rst:114
msgid ""
"**ecos-model** для автонумерации, делегирования полномочий и получения "
"индивидуальных настроек прав;"
msgstr ""

#: ../../architecture/base.rst:115
msgid "**ecos-content** для работы с контентом;"
msgstr ""

#: ../../architecture/base.rst:116
msgid "**zookeeper** для работы с реестрами артефактов."
msgstr ""

#: ../../architecture/base.rst:118
msgid ""
"Общение с источниками данных построено на базе универсального "
":ref:`Records API<Records_API>`. Зависимости от **<DATA SOURCE>** по "
"микросервисам:"
msgstr ""

#: ../../architecture/base.rst:120
msgid ""
"**ecos-uiserv** загружает атрибуты для фильтрации UI действий по заданным"
" в конфигурации условиям;"
msgstr ""

#: ../../architecture/base.rst:121
msgid ""
"**ecos-notifications** загружает атрибуты для заполнения шаблона "
"уведомления;"
msgstr ""

#: ../../architecture/base.rst:122
msgid "**ecos-history** загружает атрибуты для сохранения записи в истории;"
msgstr ""

#: ../../architecture/base.rst:123
msgid ""
"**ecos-process** загружает и меняет атрибуты в ходе выполнения BPMN "
"процессов."
msgstr ""

#: ../../architecture/base.rst:125
msgid ""
"2. Почти все микросервисы работают с **Rabbit MQ** (события и команды) и "
"с **Zookeeper** (события, конфигурация Citeck, реестры типов, аспектов, "
"настроек прав, шаблонов нумерации, распределенные блокировки, внешние "
"миксины);"
msgstr ""

#: ../../architecture/base.rst:128
msgid ""
"**UI** (мобильный и браузерный) зависят от **ecos-gateway** (шлюз для "
"доступа в систему) и от **ecos-uiserv** (микросервис с UI "
"конфигурациями);"
msgstr ""

#: ../../architecture/base.rst:130
msgid ""
"**ecos-gateway** зависит от **ecos-model** для получения информации по "
"пользователям и группах, в которых они состоят. Эта информация "
"используется для формирования JWT-токена с последующей отправкой его в "
"остальные микросервисы для аутентификации и авторизации;"
msgstr ""

#: ../../architecture/base.rst:132
msgid ""
"**ecos-integrations** зависит от внешних систем, с которыми настроена "
"интеграция."
msgstr ""

#: ../../architecture/base.rst:134
msgid "**ecos-content** зависит от места хранения контента (Alfresco или S3)."
msgstr ""

#: ../../architecture/base.rst:136
msgid "**Solr** зависит от источников данных для индексации контента и атрибутов."
msgstr ""

#: ../../architecture/base.rst:139
msgid "Взаимодействие клиента с сервером"
msgstr ""

#: ../../architecture/base.rst:145
msgid ""
"**1 этап.** При первом поступлении запроса от клиента **nginx** видит, "
"что пользователь не имеет токена и отправляет его на **Keycloak** для "
"аутентификации через протокол **OpenID Connect**."
msgstr ""

#: ../../architecture/base.rst:147
msgid ""
"**2 этап.** **Keycloak** может предложить окно ввода логина/пароля или "
"сразу выдать пользователю токен, с помощью которого он сможет зайти в "
"систему (SSO). После успешной аутентификации пользователь "
"перенаправляется на страницу, с которой его отправили в keycloak."
msgstr ""

#: ../../architecture/base.rst:150
msgid ""
"**3 этап.** После того, как запрос прошел дальше, **ecos-gateway** "
"смотрит на URL запроса и по нему решает, какой именно микросервис должен "
"его обработать (например, запрос **/emodel/api/records/query** должен "
"уйти в **ecos-model**)."
msgstr ""

#: ../../architecture/base.rst:152
msgid ""
"Для получения IP адреса и порта целевого микросервиса **ecos-gateway** "
"обращается в **ecos-registry** за нужной информацией и, получив её, "
"отправляет запрос дальше."
msgstr ""

#: ../../architecture/base.rst:155
msgid "Records API"
msgstr ""

#: ../../architecture/base.rst:157
msgid "**Общее описание**"
msgstr ""

#: ../../architecture/base.rst:159
msgid ""
"API, разработанное для организации простого и легко масштабируемого "
"общения между потребителем информации и источником данных. Язык запросов "
":ref:`Records API<Records_API>` объединяет в себе удобство обычных REST "
"запросов в классическом REST API и оптимизированный и типизированный "
"подход GraphQL, когда сервер отдает только те данные, которые нужны "
"клиенту с предсказуемой типизацией."
msgstr ""

#: ../../architecture/base.rst:161
msgid "**Плюсы решения**"
msgstr ""

#: ../../architecture/base.rst:163
msgid ""
"**Единый API** для доступа к данным в системе для всех потребителей "
"(Браузер, Мобильное приложение, Система построения отчетов, "
"Индексирование данных, Различные микросервисы, Интеграция и т.д.)."
msgstr ""

#: ../../architecture/base.rst:165
msgid ""
"**Поддержка загрузки данных из связанных сущностей.** Например, если у "
"нас договор ссылается на доверенность, то, имея идентификатор договора, "
"мы можем получить любой атрибут связанной доверенности."
msgstr ""

#: ../../architecture/base.rst:167
msgid ""
"**Оптимальность.** Загружаются и вычисляются только те атрибуты, которые "
"нужны потребителю."
msgstr ""

#: ../../architecture/base.rst:169
msgid ""
"**Простота в разработке** — разработчик источника данных (record source) "
"описывает все атрибуты, которые могут запросить потребители вне "
"зависимости от сложности их вычисления. Потребитель в запросе указывает "
"только те атрибуты, в которых он заинтересован."
msgstr ""

#: ../../architecture/base.rst:171
msgid ""
"**Простота поддержки** — не требуется версионирование API, т.к. мы в "
"любой момент можем добавлять новые атрибуты, не трогая старые."
msgstr ""

#: ../../architecture/base.rst:173
msgid ""
"**Тип получаемых данных полностью описывается запросом.** Из источника "
"данных мы возвращаем атрибуты с любым типом, а Records API приводит их к "
"нужному для потребителя."
msgstr ""

#: ../../architecture/base.rst:175
msgid ""
"**Вычисляемые атрибуты.** Возможность добавлять атрибуты, которые не "
"хранятся в БД или любом другом хранилище, а вычисляются на основе "
"существующих."
msgstr ""

#: ../../architecture/base.rst:177
msgid ""
"**Поддержка объединения атрибутов из разных источников.** Например, можно"
" написать источник данных, который часть атрибутов будет брать из "
"alfresco, а часть из внешней БД, объединяя их по идентификатору."
msgstr ""

#: ../../architecture/base.rst:180
msgid "События"
msgstr ""

#: ../../architecture/base.rst:186
msgid ""
"**События** в Citeck позволяют менять атрибутивный состав, который нужен "
"подписчику на событие, без модификации источника событий."
msgstr ""

#: ../../architecture/base.rst:188
msgid ""
"При старте системы все подписчики регистрируют в Zookeeper список "
"необходимых им событий по типам и атрибуты события, в которых они "
"заинтересованы."
msgstr ""

#: ../../architecture/base.rst:190
msgid ""
"Приложение, которое может отправлять события подобного типа, видит, что в"
" системе есть подписчики на эти события, и, при их возникновении, "
"подготовив необходимый список атрибутов, отправляет их в Rabbit MQ."
msgstr ""

#: ../../architecture/base.rst:192
msgid ""
"Атрибуты описываются в формате :ref:`Records API<Records_API>` и могут "
"пользоваться всеми преимуществами данного API."
msgstr ""

#: ../../architecture/base.rst:194
msgid ""
"Система событий в Citeck гарантирует доставку как минимум одного "
"сообщения вне зависимости от сбоев в системе."
msgstr ""

#: ../../architecture/base.rst:201
msgid "Команды"
msgstr ""

#: ../../architecture/base.rst:203
msgid ""
"**Команда** — декларативное описание действия, которое нужно сделать на "
"удаленном сервисе или локально."
msgstr ""

#: ../../architecture/base.rst:205
msgid "Пример команды для завершения задачи в **ecos-process**:"
msgstr ""

#: ../../architecture/base.rst:229
msgid ""
"**Команды** в Citeck в качестве транспорта используют очереди RabbitMQ. "
"Использование команд возможно как в синхронном, так и в асинхронном "
"режиме."
msgstr ""

#: ../../architecture/base.rst:231
msgid "Целью команд могут быть:"
msgstr ""

#: ../../architecture/base.rst:233
msgid ""
"Тип сервиса (ecos-process, ecos-uiserv, alfresco и др.). Команду "
"исполняет один из инстансов данного сервиса."
msgstr ""

#: ../../architecture/base.rst:235
msgid "Инстанс сервиса (у каждого типа сервиса может быть много инстансов)."
msgstr ""

#: ../../architecture/base.rst:237
msgid ""
"Все типы сервисов (широковещательные команды). Сервис-источник команды "
"отправляет широковещательную команду в RabbitMQ и её обрабатывают все "
"сервисы, которые в данный момент активны."
msgstr ""

#: ../../architecture/base.rst:240
msgid "Приложения"
msgstr ""

#: ../../architecture/base.rst:242
msgid ""
":ref:`Приложения Citeck<applications>` позволяют выгружать из системы "
"нужные артефакты в формате **zip** и деплоить их «на горячую» в другую "
"систему."
msgstr ""

#: ../../architecture/base.rst:244
msgid ""
":ref:`Артефакт<ecos_artifacts>` – единица расширения в Citeck. "
"Артефактами являются формы, журналы, типы, матрицы прав, действия, "
"описания процессов и многие другие сущности в системе."
msgstr ""

#: ../../architecture/base.rst:246
msgid ""
"Микросервис **ecos-apps** управляет артефактами, ведя их версионность и "
"доставляя их до целевого микросервиса. Контент артефактов в системе "
"неизменяемый и при любом изменении артефакта всегда создается новая "
"версия, а старая сохраняется в списке версий."
msgstr ""

#: ../../architecture/base.rst:252
msgid "**Доставка артефактов** при старте системы происходит в 3 этапа:"
msgstr ""

#: ../../architecture/base.rst:254
msgid ""
"Микросервис **ecos-apps**, увидив новый микросервис в сети, загружает из "
"него список типов, в которых он заинтересован."
msgstr ""

#: ../../architecture/base.rst:256
msgid ""
"Получив типы, **ecos-apps** рассылает на все остальные микросервисы "
"запрос на получение артефактов с данными типами."
msgstr ""

#: ../../architecture/base.rst:258
msgid ""
"Получив нужные артефакты со всех микросервисов, **ecos-apps** проверяет, "
"изменился ли их контент с прошлого деплоя. Если изменений нет, то "
"алгоритм заканчивает свою работу. Если изменения есть, то происходит "
"деплой новых данных в целевой микросервис."
msgstr ""

#: ../../architecture/base.rst:260
msgid "**Пример артефакта. Журнал форм**"
msgstr ""

#: ../../architecture/base.rst:267
msgid "Описание архитектуры событийно-ориентированного сервиса и бизнес-процессов"
msgstr ""

#: ../../architecture/base.rst:269
msgid "Предъявляемые требования:"
msgstr ""

#: ../../architecture/base.rst:271
msgid ""
"**Отказоустойчивость**. При выходе из строя любого узла системы "
"работоспособность должна сохраняться."
msgstr ""

#: ../../architecture/base.rst:272
msgid ""
"**Сохранность данных**. При полной или частичной потере данных на одном "
"из узлов хранилища данные в системе не должны быть потеряны."
msgstr ""

#: ../../architecture/base.rst:273
msgid ""
"**Горизонтальное масштабирование**. При росте количества процессов должна"
" быть возможность горизонтального расширения за счет увеличения "
"количества узлов в кластере, чтобы избежать деградации времени выполнения"
" запросов с увеличением времени жизни системы. Старые процессы, которые "
"уже давно завершились, не должны оказывать негативное влияние на "
"активные."
msgstr ""

#: ../../architecture/base.rst:276
msgid "ECOS Process"
msgstr ""

#: ../../architecture/base.rst:278
msgid ""
"В качестве BPM-движка для бизнес-процессов в **ecos-process** "
"интегрировано популярное open-source решение **Camunda**."
msgstr ""

#: ../../architecture/base.rst:280
msgid ""
"В качестве редактора для создания и редактирования процессов мы "
"разработали свой :ref:`low-code BPMN редактор<ecos-bpmn_platform>` на "
"основе библиотеки bpmn-js, добавив туда тесную интеграцию с экосистемой "
"Citeck (роли, формы, статусы и др). Для разработки стандартных процессов "
"не требуется участие программистов."
msgstr ""

#: ../../architecture/base.rst:287
msgid "Таймеры"
msgstr ""

#: ../../architecture/base.rst:289
msgid ""
"**Таймеры** в ecos-process позволяют отложить выполнение любых действий "
"во времени."
msgstr ""

#: ../../architecture/base.rst:291
msgid ""
"Любой микросервис в системе отправляет в ecos-process команду **«Создать "
"таймер»**, указав время срабатывания таймера и команду, которая должна "
"при этом выполниться."
msgstr ""

#: ../../architecture/base.rst:293
msgid ""
"Когда наступает время срабатывания таймера микросервис ecos-process "
"отправляет зарегистрированную в п.1 **команду на целевой сервис**. Целью "
"команды может быть любой микросервис или alfresco."
msgstr ""

#: ../../architecture/base.rst:295
msgid ""
"Примеры команд: «Отправить email», «Выполнить скрипт», «Завершить "
"этап/задачу в процессе» и др."
msgstr ""

#: ../../architecture/base.rst:298
msgid "Шардинг документов"
msgstr ""

#: ../../architecture/base.rst:300
msgid ""
"**Шардинг** — стратегия масштабирования приложений. В рамках шардинга "
"информация делится на блоки и распределяется по разным серверам, которые "
"и называются шардами."
msgstr ""

#: ../../architecture/base.rst:302
msgid ""
"Базовые принципы, которые позволяют реализовывать гибкую систему шардинга"
" в Citeck:"
msgstr ""

#: ../../architecture/base.rst:304
msgid ""
"У каждого приложения в системе Citeck есть свой **уникальный "
"идентификатор** (uiserv, integrations, emodel, notifications, alfresco и "
"др.)"
msgstr ""

#: ../../architecture/base.rst:306
msgid ""
"У каждой сущности в системе в идентификаторе содержится **ID "
"приложения**, из которого следует загружать данные:"
msgstr ""

#: ../../architecture/base.rst:309
msgid "Здесь, emodel/person@someuser"
msgstr ""

#: ../../architecture/base.rst:311
msgid "**emodel** — ID приложения,"
msgstr ""

#: ../../architecture/base.rst:312
msgid "**person** — ID источника данных в пределах приложения,"
msgstr ""

#: ../../architecture/base.rst:313
msgid "**someuser** — ID сущности в пределах источника данных."
msgstr ""

#: ../../architecture/base.rst:315
msgid ""
"При поиске мы всегда указываем источник данных, в котором следует искать "
"записи:"
msgstr ""

#: ../../architecture/base.rst:321
msgid ""
"Все запросы идут через **ecos-gateway**, который отвечает за управление "
"потоками данных."
msgstr ""

#: ../../architecture/base.rst:324
msgid "Описание базовых операций при работе с шардами"
msgstr ""

#: ../../architecture/base.rst:326
msgid "**Создание записи**"
msgstr ""

#: ../../architecture/base.rst:328
msgid ""
"Пользователь нажимает кнопку **«Создать»**, заполняет атрибуты документа "
"и отправляет результат на сервер."
msgstr ""

#: ../../architecture/base.rst:330
msgid ""
"Данные с формы принимает **ecos-gateway** и на основе правил, которые "
"настроил администратор, выбирает **id приложения**, которому нужно "
"делегировать запрос создания."
msgstr ""

#: ../../architecture/base.rst:332
msgid ""
"После того, как целевой сервис успешно выполнил операцию, **ecos-"
"gateway** возвращает клиенту **ID новой сущности**, в котором содержится "
"**ID приложения**, которое было выбрано согласно правилам в п.2."
msgstr ""

#: ../../architecture/base.rst:334
msgid "**Поиск записей**"
msgstr ""

#: ../../architecture/base.rst:336
msgid ""
"Получив запрос на поиск данных в системе, **ecos-gateway** на основе "
"располагаемых данных отправляет N запросов на поиск по разным шардам."
msgstr ""

#: ../../architecture/base.rst:338
msgid ""
"Получив результаты запросов, **ecos-gateway** объединяет их результаты и "
"отдает получившийся список клиенту."
msgstr ""

#: ../../architecture/base.rst:340
msgid ""
"Возможный вид списка сущностей, которые вернутся в результате поискового "
"запроса:"
msgstr ""

#: ../../architecture/base.rst:347
msgid "Кластеризация"
msgstr ""

#: ../../architecture/base.rst:349
msgid ""
"**Кластеризация** — разворачивание нескольких инстансов приложения для "
"обработки большой нагрузки и повышения отказоустойчивости системы."
msgstr ""

#: ../../architecture/base.rst:351
msgid "Особенности:"
msgstr ""

#: ../../architecture/base.rst:353
msgid ""
"Логически система работает одинаково вне зависимости от количества "
"инстансов приложения."
msgstr ""

#: ../../architecture/base.rst:355
msgid ""
"Инстансы приложения в кластере как правило работают с одними и теми же "
"хранилищами данных (БД, файловая система)."
msgstr ""

#: ../../architecture/base.rst:357
msgid ""
"Кластеризация нужна для отказоустойчивости и распределения нагрузки по "
"CPU, RAM и сети."
msgstr ""

#: ../../architecture/base.rst:360
msgid "Кластеризация микросервисов в системе Citeck"
msgstr ""

#: ../../architecture/base.rst:366
msgid ""
"Для разворачивания кластера микросервисов мы просто поднимаем несколько "
"инстансов приложения."
msgstr ""

#: ../../architecture/base.rst:368
msgid ""
"При старте все приложения регистрируются в  **ecos-registry**, указывая "
"при этом свой **IP, HOST** и **PORT**."
msgstr ""

#: ../../architecture/base.rst:370
msgid ""
"Балансировкой нагрузки занимается **ecos-gateway**. Когда приходит запрос"
" от пользователя за некоторым ресурсом, **ecos-gateway** по информации в "
"**ecos-registry** определяет список инстансов нужного приложения. После "
"этого запрос уходит на один из инстансов по алгоритму **round-robin**."
msgstr ""

#: ../../architecture/base.rst:372
msgid ""
"**ecos-registry** регулярно проверяет приложения (**health-check**). Если"
" приложение перестало отвечать, то запросы на него отправляться не будут."
msgstr ""

