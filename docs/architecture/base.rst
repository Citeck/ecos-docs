Базовая архитектура
====================

В упрощенном виде схема связи микросервисов выглядит следующим образом:

 .. image:: _static/base/Common_1.png
       :width: 600
       :align: center

Пользователь заходит в ECOS через nginx со статикой, который перенаправляет запросы в зависимости от их URL.

Если запрашивается статика (js, css), то nginx возвращает файлы, которые у него расположены в том же контейнере.

Если запрос уходит на back-end, то управление на себя берет Gateway, который делает следующее:

1. Отрезает от url первый элемент между "/" (напр. для **/integrations/api/management/health** это будет **integrations**)
2. Полученный в п.1 элемент является ID сервера, на который нужно перенаправить запрос. Чтобы узнать IP адрес сервера Gateway использует Registry, который знает о всех сервисах в системе
3. Когда IP адрес получен запрос вида **/api/management/health**  попадает на целевой микросервис (в нашем примере integrations).

При старте все микросервисы регистрируют себя в ECOS Registry передавая свой ID, IP, Host и другие параметры. Таким образом, в Registry всегда актуальные данные о микросервисах.

В более сложных сценариях, когда микросервисам нужно общаться между собой схему можно представить следующим образом:

 .. image:: _static/base/Common_2.png
       :width: 600
       :align: center

То есть каждый микросервис может обращаться к любым "соседям", которые зарегистрировались в ECOS Registry.

Gateway не является каким-то уникальным в плане доступа к другим микросервисам и его предназначение - обеспечить точку входа в сеть микросервисов извне.

После того как запрос уже попал внутрь - он может быть перенаправлен куда угодно.

Логически циклические зависимости между микросервисами конечно ограничены, но технически никаких ограничений нету.

Приложения
-----------

**Приложение** - это zip архив с мета информацией (id, name, dependencies, version) и модулями (form, journal, menu, credentials, datasource, ...).

Структура архива следующая:

.. code-block::

    ecos-contracts.zip
    ---meta.json
    ---artifacts/
    ------ui/
    ---------form/
    ------------agreement-form.json
    ------------legal-entity-form.json
    ------------select-signer-task-form.json
    ------------ ...
    ---------menu/
    ------------default-menu.xml
    ------------custom-menu.xml
    ---------journal/
    ------------contracts-journals.xml
    ------------payments-journals.xml