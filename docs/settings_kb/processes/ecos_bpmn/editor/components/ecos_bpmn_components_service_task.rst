Сервисная задача
=================

.. _service_task:

**Сервисная задача** используется для обозначения подключения сторонних сервисов, не относящихся к среде выполнения бизнес-процесса. 

Например, веб-сервисы или любые другие приложения для автоматизации.

Реализовано вызовом кода Java или предоставления рабочего элемента для внешнего исполнителя для асинхронного завершения или вызова логики, реализованной в форме веб-сервисов.


 .. image:: _static/service_task/service_task_1.png
       :width: 350
       :align: center

Есть четыре способа объявить, как вызывать логику Java:

    *	Указание класса, реализующего JavaDelegate или ActivityBehavior
    *	Вычисление выражения, которое разрешается в объект делегирования
    *	Вызов выражения метода
    *	Вычисление выражения значения

Атрибуты и форма
------------------

.. list-table::
      :widths: 5 5
      :class: tight-table 

      * - Укажите **Имя**

        - 
               .. image:: _static/service_task/service_task_2.png
                :width: 300
                :align: center
      * - Выберите **Тип** - Внешняя задача или Выражение

        - 

      * - | **Внешняя задача**
          | Сервисную задачу можно реализовать вне границ обработчика в виде внешней задачи. 
          | Чтобы объявить сервисную задачу для внешней обработки необходимо объявить Топик внешней задачи.
          | **Топик внешней очереди** - название очереди, в которую будут складываться задачи одного типа и на которую будет подписываться внешний обработчик.
          | :ref:`См. подробно<ecos_bpmn_external_task>`
        - 
               .. image:: _static/service_task/service_task_3.png
                :width: 300
                :align: center

      * - | **Выражение**
          | Возвращаемое значение выполнения сервисной задачи может быть присвоено уже существующей или новой переменной процесса путем указания имени переменной процесса в качестве буквального значения для атрибута **Переменная результата**. 
          | Любое существующее значение для определенной переменной процесса будет перезаписано значением результата выполнения сервисной задачи. 
          | Если имя переменной результата не указано, значение результата выполнения сервисной задачи игнорируется.

        - 
               .. image:: _static/service_task/service_task_4.png
                :width: 300
                :align: center

      * - | Настройки асинхронности:
          |  - **Асинхронно "перед"**- исполнение доходит до точки перед блоком, транзакция комитится и дальнейшее выполнение ставится в очередь, которую разбирает уже джоба
          |  - **Асинхронно "после"** - исполнение доходит до точки после блока, транзакция комитится и дальнейшее выполнение ставится в очередь, которую разбирает уже джоба
          | См. подробнее о `асинхронных задачах <https://camunda.com/blog/2014/07/advanced-asynchronous-continuations/>`_  
        - 
               .. image:: _static/service_task/service_task_5.png
                :width: 300
                :align: center

.. important::

  При сохранении, сохранении/публикации процесса проверяется обязательность заполнения следующих полей:

   - **«Тип»**;
   - **«Топик внешней задачи»** или **«Выражение»**

  Иначе в :ref:`линтере<bpmn_linter>` будет выдана ошибка.  