AI задача
===========

.. _ai_task:

.. contents::

 .. image:: _static/ai_task/01.png
       :width: 200
       :align: center
       

Задача, которая отвечает за вызов AI по указанному промпту, и далее в зависимости от бизнес-требований можно делать все, что позволяет делать BPMN отправлять задачи, уведомления, генерировать документы и так далее.

 .. image:: _static/ai_task/01_1.png
       :width: 250
       :align: center


Атрибуты и форма
----------------

.. list-table::
      :widths: 5 5
      :align: center
      :class: tight-table 

      * - Укажите **Имя**.
        - 
               .. image:: _static/ai_task/02.png
                :width: 350
                :align: center

      * - | **Подготовка данных для вызова AI**
          |
          | **Скрипт**
          | JavaScript, выполняемый до запроса к AI. 
          | Используется для подготовки данных или включения дополнительных документов в контекст.
          | Для добавления в контекст:

          .. code-block:: javascript

            let contracts = ["emodel/ecos-contract@contract1", "emodel/ecos-contract@contract2"];
            execution.setVariable("aiRecordsContext", DataValue.of(contracts));

          | ``aiRecordsContext`` — массив ссылок на документы, доступных AI. Должен быть обернут в DataValue.

        - 
               .. image:: _static/ai_task/03.png
                :width: 350
                :align: center

      * - | **Формирование запроса к AI**
          | 
          | **Включить документ в контекст**
          | Добавляет текущий документ бизнес-процесса в контекст AI-запроса.
          | AI сможет учитывать его данные при формировании ответа.
          |
          | **Текст запроса**
          | Промпт, отправляемый AI.
          | Можно вставлять переменные процесса через ``${someVariable}``.
          | Пример:

          .. code-block:: 

            Подготовь черновик письма клиенту по поводу просроченного платежа. 
            Контактное лицо: ${clientName}, сумма долга: ${debtAmount}, срок просрочки: ${daysOverdue} дней.        

        - 
               .. image:: _static/ai_task/04.png
                :width: 350
                :align: center

      * - | **Работа с результатом работы AI**
          | AI всегда возвращает текст.
          | По умолчанию результат ответа всегда сохраняется в переменную процесса ``aiResponse``. В скрипте можно с этой переменной работать.
          | 
          | **Сохранить результат в атрибут документа**
          | AI-ответ будет записан в указанный атрибут документа, по которому идет бизнес процесс.
          |
          | **Скрипт**
          | JavaScript, выполняемый после получения ответа от AI.
          | Результат запроса доступен в переменной aiResponse.

        - 
               .. image:: _static/ai_task/05.png
                :width: 350
                :align: center

      * - | Настройки асинхронности:
          |  - **Асинхронно "перед"**- исполнение доходит до точки перед блоком, транзакция комитится и дальнейшее выполнение ставится в очередь, которую разбирает уже джоба
          |  - **Асинхронно "после"** - исполнение доходит до точки после блока, транзакция комитится и дальнейшее выполнение ставится в очередь, которую разбирает уже джоба
          | См. подробнее о `асинхронных задачах <https://camunda.com/blog/2014/07/advanced-asynchronous-continuations/>`_  
        - 
               .. image:: _static/ai_task/06.png
                :width: 350
                :align: center

Примеры использования
-----------------------

Рассмотрим 2 примера, встраивания AI задачи в бизнес процессы.

Сравнение версий договоров
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

В модуле «Договоры» сотрудники могут загружать разные версии договоров, вносить правки в процессе согласования.

Рассмотрим небольшой :download:`бизнес-процесс <../files/contract-content-diff-ai-process.bpmn.xml>`, который реагирует на изменение контента договора и в карточке договора добавляет комментарий, в котором указаны ключевые изменения и выводы. 

 .. image:: _static/ai_task/example_1.png
       :width: 250
       :align: center

Настроен :ref:`сигнал<signal_start_event>` на изменение контента, далее запускается AI задача, которую мы спрашиваем в поле **«Текст запроса»**, как и в работе с :ref:`AI ассистентом<AI_assistant>`, какие были последние изменения содержания договора, и просим, чтобы ответ был выдан в виде HTML формате. 

В поле **«Скрипт»** создадим комментарий к договору, в котором будут перечислены изменения:

.. code-block:: javascript

    const comment = Records.get('emodel/comment@');

    comment.att('text', aiResponse);
    comment.att('record', documentRef);

    comment.save();

В карточку договора будет добавлен комментарий, в котором указаны ключевые изменения и выводы:

 .. image:: _static/ai_task/example_2.png
       :width: 400
       :align: center

Автоматическая генерация текста в коммерческом предложении
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

В модуле CRM можно сделать автоматическую генерацию текста в коммерческом предложении. :download:`Скачать процесс <../files/crm-deal-ai-process.bpmn.xml>`

 .. image:: _static/ai_task/example_3.png
       :width: 400
       :align: center

Когда сделка переходит статус «Подготовка коммерческого предложения», запускается AI задачаа, которая заполняет контекстные данные, то есть в предобработке мы вытаскиваем наименование клиента, юридического лица и список продуктов и услуг и используем эти данные далее в промпте.
После этого запускается :ref:`скриптовая задача<script_task>`, которая сформирует шаблон по коммерческому предложению.
 
Текст будет сгенерирован на основе информации клиента, поставщика и тех продуктов и услуг, которые были выбраны в карточке.

 .. image:: _static/ai_task/example_4.png
       :width: 500
       :align: center


