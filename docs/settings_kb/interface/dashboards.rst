Дашборды
=========

Для отображения домашней страницы пользователя или информации по кейсу или информации по сайту в ECOS предусмотрены Dashboard.

Виды дашбордов
---------------
На момент написания статьи существует 3 вида dashboard:

.. list-table:: Поля формы
      :widths: 5 40
      :header-rows: 1

      * - Тип
        - Описание
      * - **Case-details**
        - | Замена для "карточки кейса". Здесь располагается информация по документу (задачи, свойства, действия, история и др.). 
          | Ключ dashboard'а берется из RecordRef в URL страницы и как правило он связан с типом/видом ECOS. 
          | Формирование ключа построено по следующему правилу
          | **type_uuid/kind_** 
          | **type_uuid**
          | **alf_alfresco_type**	
          | То есть для договоров (contracts:agreement) это будет:  
          | 1. contracts-cat-doctype-contract/contracts-cat-contract-rent		
          | 2. contracts-cat-doctype-contract	
          | 3. alf_contracts:agreement  
          | Порядок - от более приоритетного к менее приоритетному	
      * - **Site-dashboard**
        - | Страница раздела, которая позволяет отображать общие данные по разделу. Например - журналы документов для сайта или последние события в разделе.
          | Ключ dashboard'а берется из RecordRef в URL страницы. На момент написания ключ формируется по правилу **"site"** + **siteId**.
          | Если идентификатор сайта **contracts**, то его приоритетный dashboardKey будет **site_contracts**. 
      * - **User-dashboard**
        - | Домашняя страница пользователя. Открывается если в URL не указано никакого recordRef.
          | Например: ``localhost/v2/dashboard`` 	
          | Ключ dashboard'а всегда DEFAULT если явно не задано обратного (возможно указание dashboardKey в URL) 

Алгоритм поиска dashboard следующий:

1. Смотрим наличие recordRef в URL,
2. Если recordRef отсутствует - отправляется запрос на конфигурацию домашней страницы пользователя,
3. Если recordRef присутствует, то запрашиваем аттрибуты **_dashboardKey[]** (массив) и **_dashboardType** (одно значение),
4. Дальше перебираем каждый полученный **dashboardKey** и запрашиваем у сервера конфигурацию для ключа + типа,
5. Если на сервере конфигурации не нашлось, то пробуем следующий **dashboardKey**,
#. Если ни по одному ключу не нашелся dashboard, то запрашиваем конфигурацию по ключу **DEFAULT**.

Кэширование
-----------
Кеширование возможно в пределах открытой вкладки браузера:

1. **_dashboardKey[]** и **_dashboardType** по recordRef (они достаточно редко меняются),
2. Конфигурация **dashboard** (или её отсутствие) по **dashboardKey** + **dashboardType**.

Настройки дашбордов
-------------------
Настройки виджетов на дашбордах
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Осуществляется в настройке карточки.

В конфигурации виджета в поле **config.widgetDisplayCondition** задается условие как ``json`` строка.
Написание условия в соответствии статье `Язык_предикатов <https://citeck-ecos.readthedocs.io/ru/latest/general/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%B5%D0%B4%D0%B8%D0%BA%D0%B0%D1%82%D0%BE%D0%B2.html>`_.

Если отсутствует условие, то виджет отображается.

На данный момент интерфейс настройка доступна только для виджета **Doc One**.
