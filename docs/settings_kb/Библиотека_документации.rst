**Document Library**
====================

Файловое хранилище
------------------

Document Library - иерархический интерфейс для работы с папками и документами. 

Основная идея в том, что данный интерфейс будет доступен для любого типа ECOS.  Для журнала любого типа можно настроить отображение сущностей в режиме проводника. В данном режиме можно просмотреть дерево иерархии папок и документов, произвести действия над документами и паками по аналогии действиям в проводнике Windows. Таким образом, журнал библиотеки документов можно переключать в один из двух режимов отображения: “список (стандартный режим “Журнал” без указания папок) и “Проводник”. Проводник отображается в правом меню с возможностью его свернуть.

**Основные собенности работы c DocLib:**

1) В настройках типа опция “Включить проводник”. В настройках базового типа добавлены дополнительные параметры:
* тип папки
* тип документов 
* тип документа по умолчанию. 

2) При загрузке файла tcnm возможность указать атрибуты файла, которые должны отображаться в свойствах:
Наименование документа (Document name);
* Дата создания (Created);
* Автор (Author);
* Дата изменения (Modified);
* Автор изменения (Modified by);
* Версия (Version);
  
3) Предусмотрена функциональность для загрузки файлов по кнопке и drug&drop и функциональность, позволяющая перемещать файлы из каталога в каталог, используя  drug&drop.

Для  папок и файлов должны быть предусмотрены следующие действия:

* Переход внутрь вложенного Каталога
* Загрузка Документа (кнопка «Загрузить»)
* Переместить
* Загрузить новую версию
* Переход на просмотр документа в новой вкладке по иконке глаза и в отдельном всплывающем окне (по щелчку мыши при наведении курсора на наименование файла)
* Скачать файл
* Редактировать свойства
* Копировать 
* Удалить (через помещение в корзину)

.. image:: _static/doclib_actions.png
	:align: center
	:alt: Варианты действий

* Просмотр списка удаленных документов.

1) Предусмотрена функциональность, позволяющая скачивать один или несколько файлов (путем выделения нескольких файлов) одновременно. Выделение файлов осуществляется с помощью [Shift] и [Ctrl].

2) Выведено в отдельном виджете дерево иерархии библиотеки.

3) Обеспечена возможность поиска документа по всем атрибутам объектов (с возможностью фильтрации и сортировки списка по каждому параметру). Результат поиска отображается в виде списка. Поскольку результат могут составить документы из разных папок, то в журнал создано поле  “Размещение” (Location) для отображение пути размещения документа.

4) Для отображения документов и папок использованы иконки, соответствующие формату файлов по аналогии с проводником Windows.

Макет
~~~~~~
* В журнале типа добавлена опция “Проводник” (иконка проводника) справа от значка предпросмотра.
* Виджет с деревом библиотеки отображается только, если выбран режим просмотра “Проводник”.
* При выборе нескольких строк журнала доступны групповые действия “скачать” и “удалить“. Иконки групповых действий размещены над журналом.
* Над журналом размещено название текущей раскрытой папки, чуть выше - полный путь к открытой папке.

Вариант макета формы

.. image:: _static/doclib_maquette.png
	:align: center
	:alt: Вариант макета формы

Иерархия Document Library
-------------------------

Библиотека документов API
-------------------------
Для примеров взят тип **emodel/type@TEST_TYPE**

1. Корень для библиотеки документов всегда доступен по составному id: **alfresco/doclib@TEST_TYPE$** (от id типа отбрасывается префикс **emodel/type@**, добавляется префикс **alresco/doclib@** и постфикс **$**)

2. Получение дочерних элементов::
  
	Records.get('alfresco/doclib@TEST_TYPE$').load('children[]{id:?id,displayName:?disp,nodeType,hasChildrenDirs:hasChildrenDirs?bool,typeRef:typeRef?id}');

Все получаемые id нужно проверять на наличие префикса **alfresco/doclib@**. Если возвращается просто **doclib@…**, то нужно добавить **alfresco/** чтобы получилось **alfresco/doclib@**

3. Узнать поддерживает ли тип режим doclib::

	Records.get('emodel/type@TEST_TYPE').load('resolvedDocLib.enabled?bool')


4. Получить список типов файлов, которые могут быть в данной библиотеке::

	Records.get('emodel/type@TEST_TYPE').load('resolvedDocLib.fileTypeRefs[]?id')

5. Получить тип директории в библиотеке документов::

	Records.get('emodel/type@TEST_TYPE').load('resolvedDocLib.dirTypeRef?id')

6. Создать новый файл или папку в библиотеке::

	var record = Citeck.Records.get('alfresco/doclib@TEST_TYPE$');
	record.att('_parent', 'alfresco/doclib@TEST_TYPE$workspace://SpacesStore/16fffdd9-c37a-4d4f-8e40-9e698c8f194f'); // для корня библиотеки следует использовать alfresco/doclib@TEST_TYPE$
	record.att('cm:title', 'Папка #1000');
	record.att('_type', 'emodel/type@file'); //здесь должен быть один из типов пункта 4 или пункта 5 (по этому типу определяется, что именно нужно создать - папку или файл)
	record.save();

7. Получить дочерние элементы по типу::

	Records.query({
	    sourceId: 'alfresco/doclib',
	    query: {
	        parentRef: 'alfresco/doclib@TEST_TYPE$',
	        nodeType: 'DIR'
	    },
	    language: 'children'
	});

8. Поиск дочерних элементов с фильтрацией (для поиска через полосу поиска над таблицей флаг recursive должен быть true)::

	 Records.query({
	    sourceId: 'alfresco/doclib',
	    query: {
	        parentRef: "alfresco/doclib@TEST_TYPE$",
	        recursive: false,
	        filter: {
	            t: 'contains',
	            att: 'ALL',
	            val: '111'
	        }
	    },
	    language: 'children'
	  })

9. Получение пути для документа (можно объединять с другими атрибутами)::

	Records.get('alfresco/doclib@nsd-attorney$workspace://SpacesStore/fab07cb3-cf5a-4c07-a17a-4e3f56e208d2').load('path[]{disp:?disp,id:?id}')
