.. _ecos-model_label:

============================
**Хранение данных (Модель)**
============================

1. Ecos data model
------------------
При редактировании типа кейса есть возможность настроить атрибуты типа на вкладке “Модель”.

.. image:: _static/model_v4.png
       :scale: 90 %
       :align: center

Id - идентификатор поля, по которому оно будет доступно на форме, в журнале и других местах.

Name - имя поля для отображения пользователю

Тип - тип поля. Поддерживаются: 

* Text - текстовые данные;

* Association - связь с другой сущностью;

* Boolean - булево значение да/нет;

* Number - число;

* Date - дата;

* DateTime - дата с временем;

* Content - содержимое. Как правило поля с этим типом используются для сохранения больших объемов данных. Например - содержимое документа. Рекомендуется использовать только если стандартный cm:content не подходит;

* Computed - настройка динамически вычисляемого атрибута
  
Вычисляеые атрибуты
~~~~~~~~~~~~~~~~~~~

.. image:: _static/Модель_вычисляемые_атрибуты.png
       :scale: 90 %
       :align: center

Тип - тип вычисляемого атрибута. Поддерживаются:

 * Script - вычисление атрибута на основе javascript'а;
 * Attribute - вычисление атрибута на основе другого атрибута (можно делать алиас на глубоко вложенный атрибут. Например: idocs:counterparty.idocs:fullOrganizationName?str);
 * Value - константное значение;
 * Template - шаблонная строка. Можно использовать вставки вида ${…}. Например: ${someAttribute?str}. Вместо данного плейсхолдера будет подставлено значение укзанного атрибута;
 * Counter - значение будет генерироваться по счетчику при создании документа и не меняться со временем;
 
Storing type - тип сохранения
""""""""""""""""""""""""""""""

Определяет нужно или нет сохранять вычисленное значение и если да, то в какие моменты. Возможные значения:

* None - сохранение не нужно. При каждом обращении вычисляем значение заново;
* On empty - сохранять вычисленное значение только если сохраненное значение отсутствует (т.е. при запросе значения вернулся null);
* On create - сохранять вычисленное значение только после создания. Последующие мутации никак данный атрибут не затронут и он будет работать как обычный атрибут.
* On mutate - сохранять вычисленное значение при каждой мутации. В случае использования Records API для изменения записи гарантируется актуальность значения.

Права на атрибуты (Type Permission)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2.Настройка матрицы прав
------------------------

3. Вычисляемые значения (Computed)
----------------------------------

4. Alfresco ECM (Content Services)
----------------------------------

Модель позволяет определять типы данных (types). Для типа можно определить свойства типа(properties) и связи с другими типами - ассоциации (associations), а также аспекты (aspects).

Аспекты позволяют добавлять к объектам дополнительные свойства и ассоциации, а также другие аспекты. В этом смысле они аналогичны типам, но в отличие от типов, объект может иметь множество различных аспектов.


4.1. Задача
~~~~~~~~~~~

1. Реализовать модель testModel состоящую из 


   Типов:
      a) car, со свойствами mass, speed, year;
      b) producer, c одним свойством producerName;

   Аспекта trunk с одним свойством shaftCount. 

  Ассоциации между producer и car, один ко многим соответственно.


2. Добавить к ней локализации en и ru


4.2. Реализация
~~~~~~~~~~~~~~~

1. Создать в "alfresco\module\idocs-repo\model\" файл модели testModel.xml:
   
::

 <model name="test:car" xmlns="http://www.alfresco.org/model/dictionary/1.0">
   <imports>
      <import uri="http://www.alfresco.org/model/dictionary/1.0" prefix="d" />
      <import uri="http://www.alfresco.org/model/datalist/1.0" prefix="dl" />
   </imports>
   <namespaces>
      <namespace uri="http://www.citeck.ru/model/testModel/1.0" prefix="test"/>
   </namespaces>
   <types>
      <type name="test:car">
         <parent>dl:dataListItem</parent>
         <properties>
            <property name="test:mass">
               <type>d:int</type>
            </property>
            <property name="test:speed">
               <type>d:int</type>
            </property>
            <property name="test:year">
               <type>d:text</type>
            </property>
         </properties>
         <associations>
            <association name="test:assocTest">
               <source>
                  <mandatory>false</mandatory>
                  <many>true</many>
               </source>
               <target>
                  <class>test:producer</class>
                  <mandatory>false</mandatory>
                  <many>false</many>
               </target>
            </association>
         </associations>
      </type>
      <type name="test:producer">
         <parent>dl:dataListItem</parent>
         <properties>
            <property name="test:producerName">
               <type>d:text</type>
            </property>
         </properties>
      </type>
   </types>
   <aspects>
      <aspect name="test:trunk">
         <properties>
            <property name="test:shaftCount">
               <type>d:int</type>
            </property>
         </properties>
      </aspect>
   </aspects>
 </model>

2. Создать в "alfresco\module\idocs-repo\messages\" файлы локализаций:
    
a) test_en.properties:
::

 test_car.type.test_car.title=Car
 test_car.property.test_mass.title=Mass
 test_car.property.test_speed.title=Speed
 test_car.property.test_year.title=Year
 test_car.association.test_assocTest.title=Test association
 test_car.type.test_producer.title=Producer
 test_car.property.test_producerName.title=Producer name
 test_car.property.test_shaftCount.title=Shaft count

b) test_ru.properties:
::

 test_car.type.test_car.title=Легковой автомобиль
 test_car.property.test_mass.title=Масса
 test_car.property.test_speed.title=Скорость
 test_car.property.test_year.title=Год
 test_car.association.test_assocTest.title=Тестовая ассоциация
 test_car.type.test_producer.title=Производитель
 test_car.property.test_producerName.title=Имя производителя
 test_car.property.test_shaftCount.title=Количество осей

3. Прописать их в "alfresco\module\idocs-repo\context\bootstrap-context.xml"

a) Добавить в list
::

 <property name="models">
   <list>
    ...
   </list>
 </property>
 путь к модели:

 <value>alfresco/module/idocs-repo/model/testModel.xml</value>

b) Добавить в list
::

 <property name="labels">
   <list>
    ...
   </list>
 </property>
 путь к локализации:

 <value>alfresco/module/idocs-repo/messages/test</value>

4. Перезапустить проект, модель подхватится сама.
