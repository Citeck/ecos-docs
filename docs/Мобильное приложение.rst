=============================================================
Мобильное приложение
=============================================================



1.	Инициализация
-------------------------------------------------------------
Android:
 *	В директории проекта выполните команду в терминале `yarn`
 *	Запустите `Android Studio` и выполните синхронизацию Gradle, а затем сборку проекта
 *	Выполните в терминале в директории проекта команду `yarn start`
 *	Запустите новый экземпляр терминала и выполните команду `yarn android`

 Примечание: перед выполнением команды `yarn android` убедитесь, что у Вас установлен `Android SDK`, настроен и запущен эмулятор `Android Virtual Device` или подключен реальный девайс.

iOS:
 *	В директории проекта выполните команду в терминале `yarn`
 *	Перейдите в директорию `ios` и выполните команду в терминале `pod install`. убедитесь, что у Вас установлен `CocoaPods`
 *	Запустите `XCode` и выполните сборку проекта
 *	Вернитесь в корневую директорию проекта и выполните команду в терминале `yarn start`
 *	Запустите новый экземпляр терминала и выполните команду `yarn ios`

 Примечание: для запуска в нужном симуляторе нужно использовать атрибут `simulator`, пр.: `yarn ios --simulator="iPhone 11 Pro Max"`

Основные команды:
 *	`yarn start` - запуск Metro сервера для подгрузки ассетов и отслеживания изменений (Debug mode only)
 *	`yarn android` - установка и запуск Debug-версии приложения на девайсе из перечня `adb devices -l`
 *	`yarn ios` - установка и запуск Debug-версии на девайсе с iOS
 *	`yarn lint` - проверка ошибок линтера
 *	`yarn lint:fix` - устранение ошибок линтера, поддерживающих автоматическое исправление

 Примечание: в проекте установлен и настроен `eslint` для соблюдения единого code style. Также в репозитории настроен `pre-commit hook`, который не позволяет пушить коммиты, содержащие ошибки линтера (используйте атрибут `--no-verify` при коммите, чтобы обойти хук)

2.	Релизная сборка
-------------------------------------------------------------
Android:
 *	Запустите `Android Studio`
 *	В верхнем меню выберите `Build -> Generate signed Bundle or APK`
 *	Выберите требуемый тип сборки и нажмите `Next`
 *	Выберите `Keystore` и ключ, введите пароли и нажмите `Next`
 *	Установите галочки напротив `Jar signature` и `Full APK Signature` и нажмите `Finish`

 Примечание: Для публикации сборки в `Play Market` используйте `Android App Bundle`

iOS:
 *	Запустите `XCode`
 *	Перейдите в настройки проекта на вкладку `Capabilities & Signature`
 *	Укажите нужный профиль и сертификат
 *	В верхнем меню `XCode` выберите `Build -> Generic iOS device`
 *	В верхнем меню `XCode` выберите `Build -> Archive`
 *	Следуйте подсказкам в модальном окне
 *	Выберите последний билд в только что открывшемся модальном окне `Organizer`
 *	Нажмите `Upload`
 *	Следуйте подсказкам в модальном окне
